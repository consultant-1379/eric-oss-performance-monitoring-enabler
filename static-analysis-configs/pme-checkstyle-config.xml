<?xml version="1.0"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2023
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java, properties"/>
    <property name="severity" value="warning"/>

    <!-- Miscellaneous Checks -->
    <module name="UniqueProperties">
        <property name="fileExtensions" value="properties"/>
    </module>

    <!-- Whitespace Checks -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!-- Size Violations Checks -->
    <module name="LineLength">
        <property name="max" value="150"/>
    </module>

    <module name="SuppressWarningsFilter"/>
    <module name="TreeWalker">
        <module name="SuppressionCommentFilter">
            <property name="offCommentFormat" value="CHECKSTYLE.OFF\: ([\w\|]+)"/>
            <property name="onCommentFormat" value="CHECKSTYLE.ON\: ([\w\|]+)"/>
            <property name="checkFormat" value="$1"/>
        </module>
        <property name="tabWidth" value="4"/>

        <!-- Annotation Checks -->
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarnings"/>
        <module name="SuppressWarningsHolder"/>

        <!-- Block Checks -->
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="tokens"
                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,INSTANCE_INIT"/>
        </module>

        <!-- Class Design Checks -->
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>

        <!-- Coding Checks -->
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                      value="java.lang.Throwable, RuntimeException, Error, Throwable, java.lang.Error, java.lang.RuntimeException"/>
        </module>
        <module name="IllegalThrows">
            <property name="illegalClassNames"
                      value="java.lang.Throwable, RuntimeException, Error, Throwable, java.lang.Error, java.lang.RuntimeException, NullPointerException"/>
        </module>
        <module name="IllegalToken">
            <property name="tokens" value="STRICTFP, LITERAL_NATIVE"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleStringLiterals">
            <property name="allowedDuplicates" value="4"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NoClone"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>

        <!-- Headers Checks -->

        <!-- Imports Checks -->
        <module name="AvoidStarImport"/>
        <module name="CustomImportOrder">
            <property name="customImportOrderRules"
                      value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE"/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="specialImportsRegExp" value="^(javax|org)\."/>
            <property name="thirdPartyPackageRegExp" value="^com\."/>
        </module>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Javadoc Comments Checks -->
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@deprecated, @param, @return, @see, @since, @throws"/>
        </module>
        <module name="JavadocMethod">
            <property name="allowedAnnotations"
                      value="Override, DELETE, GET, POST, PostConstruct, PreDestroy, PUT, Test"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
            <property name="minLineCount" value="2"/>
            <property name="scope" value="public"/>
            <property name="tokens" value="ANNOTATION_FIELD_DEF, METHOD_DEF"/>
        </module>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
            <property name="endOfSentenceFormat" value="([.?!:][ \t\n\r\f&gt;])|([.?!:]$)"/>
            <property name="scope" value="public"/>
        </module>
        <module name="JavadocTagContinuationIndentation">
            <property name="offset" value="4"/>
        </module>
        <module name="JavadocType">
            <property name="scope" value="public"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="SingleLineJavadoc">
            <property name="ignoredTags" value="@inheritDoc, @see"/>
        </module>

        <!-- Metrics Checks -->

        <!-- Miscellaneous Checks -->
        <module name="ArrayTypeStyle"/>
        <module name="CommentsIndentation"/>
        <module name="FinalParameters"/>
        <module name="OuterTypeFilename"/>
        <module name="UpperEll"/>

        <!-- Modifiers Checks -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier">
            <property name="tokens"
                      value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CTOR_DEF, CLASS_DEF, ENUM_DEF"/>
        </module>

        <!-- Naming Conventions Checks -->
        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviationLength" value="4"/>
            <property name="ignoreFinal" value="false"/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^(e{1}[0-9]*)$"/>
        </module>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>

        <!-- Regexp Checks -->


        <!-- Whitespace Checks -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="tokens"
                      value="IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="GenericWhitespace">
            <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter">
            <property name="allowLineBreaks" value="false"/>
            <property name="tokens" value="DOT"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="allowLineBreaks" value="true"/>
            <property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="id" value="endOfLineSeparatorWrap"/>
            <property name="option" value="eol"/>
            <property name="tokens" value="COMMA, SEMI, RBRACK, LPAREN, RPAREN"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="newLineSeparatorWrap"/>
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT, ELLIPSIS, AT, ARRAY_DECLARATOR, METHOD_REF"/>
        </module>
        <module name="SingleSpaceSeparator">
            <property name="validateComments" value="true"/>
        </module>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
    </module>
</module>
