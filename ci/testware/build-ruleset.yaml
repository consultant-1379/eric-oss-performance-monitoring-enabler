#
# COPYRIGHT Ericsson 2023
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

modelVersion: 2.0
description: "Build rules for eric-oss-performance-monitoring-enabler testware"
docker-images:
  - java: armdocker.rnd.ericsson.se/proj-adp-cicd-drop/bob-java11mvnbuilder:${env.MVN_BUILDER_TAG}
env:
  - HOME
  - PWD
  - ENABLE_HELM_V3 (default=true)
  - HELM_KUBECTL_TAG (default=latest)
  - DOCKER_NETWORK (default=--network host)
  - DOCKER_VOLUME_MAPPING_PASSWD (default=--volume ${env.HOME}/mypasswd:/etc/passwd:ro)
  - PROJ_MVN (default=/proj/mvn)
  - MAVEN_CLI_OPTS (default=-Duser.home=${env.HOME} -B)
  - MAVEN_OPTS (default=-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn)
  - MVN_BUILDER_TAG (default=latest)
  - RELEASE (default=false)
  - GERRIT_CHANGE_NUMBER (default=$GERRIT_CHANGE_NUMBER)
  - KUBECONFIG (default=${env.HOME}/.kube/config)
  - RELEASE (default=false)
  - SELI_ARTIFACTORY_REPO_USER
  - SELI_ARTIFACTORY_REPO_PASS
  - NEXUS_USER
  - NEXUS_PASS

properties:
  - image-registry: armdocker.rnd.ericsson.se

var:
  - rstate
  - branch
  - semver
  - version
  - commithash
  - image-repo-path
  - image-full-name
  - docker-image-size

rules:
  pcr-pipeline:
    - rule: clean
    - rule: build
    - rule: delete-images

  publish-pipeline:
    - rule: clean
    - rule: generate-version
    - rule: build
    - rule: push-epme
    - rule: publish-epme
    - rule: delete-images

  # Removes the build directories in the module & sub modules
  clean:
    - task: gradle-clean
      docker-image: java
      docker-flags: &java-docker-flags
        - ${env.DOCKER_NETWORK}
        - "--env HOME=${env.HOME}"
        - "--env GRADLE_USER_HOME=/proj/mvn/gradle"
        - "--env KUBECONFIG=${env.KUBECONFIG}"
        - "--env ENABLE_HELM_V3"
        - "--volume ${env.PROJ_MVN}:/proj/mvn"
        - "--volume ${env.HOME}:${env.HOME}"
        - "--volume /etc/ssh:/etc/ssh"
        - "--env SELI_ARTIFACTORY_REPO_USER"
        - "--env SELI_ARTIFACTORY_REPO_PASS"
        - "--env NEXUS_USER"
        - "--env NEXUS_PASS"
        - ${env.DOCKER_VOLUME_MAPPING_PASSWD}
      cmd: ./epme-testware/gradlew -Duser.home=${env.HOME} -p epme-testware clean

  # Creates the var.version in the .bob directory
  generate-version:
    - task: generate-version-file
      docker-image: java
      docker-flags: *java-docker-flags
      cmd: ./epme-testware/gradlew -Depme.release.version=${var.version} -Duser.home=${env.HOME} -p epme-testware setupVersion

  # Creates the testware Docker image and generates the chart
  build:
    - task: gradle-build
      docker-image: java
      docker-flags: *java-docker-flags
      docker-in-docker: socket
      cmd: ./epme-testware/gradlew -Depme.release.version=${var.version} -Duser.home=${env.HOME} -p epme-testware buildDockerImage helmPackage

  # Pushes the epme docker image
  push-epme:
    - task: docker-login
      cmd: docker login ${image-registry}
    - task: gradle-push
      docker-image: java
      docker-in-docker: socket
      docker-flags: *java-docker-flags
      cmd: ./epme-testware/gradlew -Depme.release.version=${var.version} -Duser.home=${env.HOME} -p epme-testware pushDockerImage

  # Publishes the epme testware to the test repository
  publish-epme:
    - task: gradle-publish
      docker-image: java
      docker-in-docker: socket
      docker-flags: *java-docker-flags
      cmd: ./epme-testware/gradlew -Depme.release.version=${var.version} -Duser.home=${env.HOME} -p epme-testware helmPublish

  # Removes the testware image
  delete-images:
    - task: delete-test-image
      cmd: docker image remove ${image-registry}/proj-eric-oss-drop/oss-testware/eric-oss-performance-monitoring-enabler-testware:${var.version} || true
