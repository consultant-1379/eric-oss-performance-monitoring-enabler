#
# COPYRIGHT Ericsson 2023
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

modelVersion: 2.0
description: "pme Custom Helm Install for Microservice Hybrid Pipelines"
# See image catalog: https://confluence.lmera.ericsson.se/display/ACD/ADP+CICD+Docker+Image+Catalog
docker-images:
  - adp-release-auto: armdocker.rnd.ericsson.se/proj-adp-cicd-drop/bob-adp-release-auto:${env.RELEASE_AUTO_TAG}
  - adp-helm-kubectl: armdocker.rnd.ericsson.se/proj-adp-cicd-drop/bob-py3kubehelmbuilder:${env.HELM_KUBECTL_TAG}
import:
  common: ../../common-properties.yaml
properties:
  - image-secret: armdocker
  - enabled-helm-design-rules: "-DhelmDesignRule.config.drHc011=enable -DhelmDesignRule.config.DR-D1120-045-AD=enable"
  - exempt-helm-design-rules: ${helm.exempt-helm-design-rules}
# import environment variables (For example: Jenkins parameters)
env:
  - COLLECT_LOGS_SCRIPT_LOCATION (default="https://arm.sero.gic.ericsson.se/artifactory/proj-ADP_GS_Support_FTP-generic-local/collect_ADP_logs")
  - ENABLE_HELM_V3 (default=true)
  - HOME
  - HELM_INSTALL_TIMEOUT (default=5m0s)
  - HELM_KUBECTL_TAG (default=latest)
  - HELM_RELEASE (default=${common.helm-chart-name}-release)
  - K8S_NAMESPACE (default=${common.helm-chart-name}-${var.commithash})
  - KUBECONFIG (default=${env.HOME}/.kube/config)
  - PWD
  - RELEASE_AUTO_TAG (default=latest)
# Variables, set by tasks (this includes default tasks in golden stages)
# can access var: entries from common_ruleset2.0.yaml
# https://gerrit-gamma.gic.ericsson.se/gitweb?p=OSS/com.ericsson.oss.ci/oss-common-ci-utils.git;a=blob_plain;f=dsl/rulesetFiles/common_ruleset2.0.yaml;hb=refs/heads/dVersion-2.0.0-hybrid
var:
  - commithash
  - docker-config-basepath
  - version
# Rules to execute
rules:
  helm-init:
    - task: find-docker-config-basepath
      cmd: dirname $HOME/.docker/config.json > .bob/var.docker-config-basepath
    - task: commit-hash
      docker-image: adp-release-auto
      cmd:
        - git rev-parse --short HEAD > .bob/var.commithash
    - task: helm-install-prep
      docker-image: adp-helm-kubectl
      docker-flags: &docker_flags_kube_config
        - "--env HOME=${env.HOME}"
        - "--env K8S_NAMESPACE=${env.K8S_NAMESPACE}"
        - "--env KUBECONFIG=${env.KUBECONFIG}"
        - "--env ENABLE_HELM_V3"
        - "--env COLLECT_LOGS_SCRIPT_LOCATION"
        - "--volume ${env.PWD}:${env.PWD}"
        - "--volume ${env.HOME}:${env.HOME}"
        - "--volume ${env.KUBECONFIG}:${env.KUBECONFIG}"
        - "--volume ${var.docker-config-basepath}:${var.docker-config-basepath}"
      cmd: kubectl create secret generic ${image-secret}
        --from-file=.dockerconfigjson=$HOME/.docker/config.json
        --type=kubernetes.io/dockerconfigjson
        --namespace ${env.K8S_NAMESPACE} || true

  helm-install-prep:
    - task: create-pme-certificates
      docker-image: adp-helm-kubectl
      docker-flags: *docker_flags_kube_config
      cmd:
        - openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout .bob/pme.key -out .bob/pme.crt -subj "/CN=dummyHostName/O=dummyHostName" -addext "subjectAltName = DNS:dummyHostName"
        - openssl x509 -in .bob/pme.crt -text
    - task: create-secrets
      docker-image: adp-helm-kubectl
      docker-flags: *docker_flags_kube_config
      cmd:
        - kubectl create secret generic eric-cacert-secret
          --from-file=tls.crt=.bob/pme.crt
          --from-file=cacertbundle.pem=.bob/pme.crt
          --namespace ${env.K8S_NAMESPACE} || true
        - kubectl create secret generic eric-pme-cert-secret --namespace ${env.K8S_NAMESPACE} || true
        - kubectl create secret generic kafka-tls-secret --namespace ${env.K8S_NAMESPACE} || true
  helm-install:
    - rule: helm-install-prep
    - rule: helm-init
    - task: helm-install-or-upgrade
      docker-image: adp-helm-kubectl
      docker-flags: *docker_flags_kube_config
      cmd: helm upgrade
        --install ${env.HELM_RELEASE} .bob/${common.helm-chart-name}-internal/${common.helm-chart-name}-${var.version}.tgz
        --namespace ${env.K8S_NAMESPACE}
        --set eric-log-shipper.logshipper.autodiscover.namespace=${env.K8S_NAMESPACE}
        --set imageCredentials.pullSecret=${image-secret}
        --set tls.platformCaCert.secretName=eric-cacert-secret
        --set global.pullSecret=${image-secret}
        --set tls.appCert.secretName=eric-pme-cert-secret
        --set apiGateway.route.enabled=false
        --set log.streamingMethod=indirect
        --set kafka.bootstrapServer.path=localhost
        --set global.hosts.gas=gas-pcr.ericsson.se
        --set tls.kafkaCaCert.secretName=kafka-tls-secret
        --timeout ${env.HELM_INSTALL_TIMEOUT}
        --wait
    - task: apply-network-policy
      docker-image: adp-helm-kubectl
      docker-flags:
        - "--env KUBECONFIG=${env.KUBECONFIG}"
        - "--env K8S_NAMESPACE=${env.K8S_NAMESPACE}"
        - "--volume ${env.KUBECONFIG}:${env.KUBECONFIG}"
        - "--volume ${env.PWD}/ci/helm:/helm/"
      cmd: kubectl apply -f /helm/vaNetworkPolicy.yaml -n ${env.K8S_NAMESPACE}