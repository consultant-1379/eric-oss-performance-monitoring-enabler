#
# COPYRIGHT Ericsson 2023 - 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

# Default values for eric-oss-performance-monitoring-enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  log:
    streamingMethod: indirect
#  timezone: UTC
#  registry:
#    url: armdocker.rnd.ericsson.se
#    pullPolicy: IfNotPresent
#  #Secret must be manually created in the namespace, no default value
#  pullSecret:
#  fsGroup:
#    manual: 10000
#    namespace: true
#  # The IP family the service belongs to when service.type is set to ClusterIP.
#  # Options are: IPv4, IPv6
#  internalIPFamily:
#  security:
#    policyBinding:
#      create: true
#    policyReferenceMap:
#      default-restricted-security-policy: "<restricted security policy at customer deployment>"
#    tls:
#      enabled: true

replicaCount: 1

podDisruptionBudget:
  # Minimum number/percentage of Pods that must remain available during the planned disruption.
  # Value can be expressed as an integer or as a percentage. When specified as a percentage of the Pods,
  # if it does not map to an exact number, Kubernetes rounds up to the nearest integer.
  # minAvailable: 2 # example value for 2 pods defined as integer
  minAvailable: "40%"

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

#Empty labels list for application deployment engineer to add more labels (In Compliance with DR-D1121-068).
labels: {}

imageCredentials:
  repoPath:
  eric-oss-performance-monitoring-enabler:
    repoPath: # see default in eric-product-info.yaml
    registry: {}
      # overrides global registry url
    # url:
    #- Secret must be manually created in the namespace, no default value
    # pullSecret: REPO_SECRET

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

annotations: {}

service:
  type: ClusterIP
  port: 8080    # Changed from 80 to 8080 and spring application is hosted on 8080
  endpoints:
    chassisapi:
      tls:
        enforced: required
        verifyClientCertificate: required

ingress:
  enabled: false
  ingressClass: OAM-IngressClass
  hosts:
    - host: chart-example.local
      paths: [/]

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
eric-pm-server:
  rbac:
    appMonitoring:
      enabled: true

pmserver:
  name: eric-pm-server

prometheus:
  path: /actuator/prometheus
  scrape: true

terminationGracePeriodSeconds: 30

resources:
  eric-oss-performance-monitoring-enabler:
    requests:
      memory: 256Mi
      cpu: 500m
      ephemeral-storage: ""
    limits:
      memory: 2Gi
      cpu: 500m
      ephemeral-storage: ""
    jvm:
      initialMemoryAllocationPercentage: 50
      smallMemoryAllocationMaxPercentage: 70
      largeMemoryAllocationMaxPercentage: 50

autoScaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
topologySpreadConstraints:
  deployment: []
  test: []

tolerations:
  - key: node.kubernetes.io/not-ready
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 0
  - key: node.kubernetes.io/unreachable
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 0

affinity:
  podAntiAffinity: "soft"

probes:
  eric-oss-performance-monitoring-enabler:
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 140
      periodSeconds: 10
      timeoutSeconds: 10
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 140
      periodSeconds: 10
      timeoutSeconds: 10

podPriority:
  eric-oss-performance-monitoring-enabler:
    priorityClassName: ""

# DR-470222-010
# local streamingMethod:
# indirect - stdout to infrastructure logging framework
# direct - direct streaming to the Log Aggregator (e.g. eric-log-transformer)
# dual - stdout to infrastructure logging framework and direct streaming to Log Aggregator
# null - null or absent parameter the streaming method is determined by global.log.streamingMethod
# Indirect is chosen to enable stdout in the absecence of log aggregator
log:
  streamingMethod: "direct"
  streamingDestination:

# Log level settings. Possible values ERROR, WARN, INFO, DEBUG
logging:
  logLevel: INFO
  enableAuditLogOfReads: false

# choice='unconfined, runtime/default, localhost' [ default= ""]
# Configuration of AppArmor profile type. The following values are possible:
# unconfined  - Indicates that there is no profile loaded.
# runtime/default - Applies the default profile of the container engine.
# localhost   - Applies a specific profile loaded on the host
appArmorProfile:
  type: ""
seccompProfile:
  type: "RuntimeDefault"

# IAM Client ID and Secret (This is the level at which the app-lcm supplies these values to the CSAR)
clientId:
clientSecret:
baseUrl: ""

iam:
  host:
  basePath: /auth/realms/master
  tokenEndpointPath: /protocol/openid-connect/token

pmsch:
  host:
  url:
  calculator:
    basePath: "/kpi-handling"

dmm:
  host:
  url:
  data-discovery:
    basePath: "/dmm-data-catalog"

apiGateway:
  name: eric-eo-api-gateway

kafka:
  tls:
    enabled: false
  bootstrapServer:
    path: eric-oss-dmm-kf-op-sz-kafka-bootstrap
    port: 9092
  consumerGroup:

networkPolicy:
  enabled: true

# TLS Certificate settings
tls:
  enabled: true
  clientProtocol: TLSv1.3
  platformCaCert:
    secretName:
    mountPath: /tls/certs
    truststorePass:
  appCert:
    secretName:
    mountPath: /mtls/certs
    appKeyStorePass:
  kafkaCaCert:
    secretName:
    fileName: tls.cert
    mountPath: /kafka/certs

eric-oss-performance-monitoring-enabler-pg:
  enabled: true
  driver: org.postgresql.Driver
  host: eric-oss-performance-monitoring-enabler-pg
  port: 5432
  postgresUser: pme_user
  postgresDatabase: performance_monitoring
  credentials:
    kubernetesSecretName: eric-oss-performance-monitoring-enabler-postgres-secret
  service:
    port: 5432
  metrics:
    enabled: true
  global:
    networkPolicy:
      enabled: true
    security:
      tls:
        enabled: false
  retention:
    sessionRetentionSchedule: "0 0 1 ? * *"
    sessionExpirationPeriodInHours: 48

kpiDefinitions:
  fileName:
